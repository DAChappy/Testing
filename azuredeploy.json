{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {
    "assetLocationURI": {
      "type": "string",
      "metadata": {
        "description": "The location of resources, such as templates and DSC modules, that the template depends on"
      },
      "defaultValue": "https://raw.githubusercontent.com/mbakunas/windows-vm-domain-join-test/master/"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The name of the Storage Account to create"
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the storage account to be created"
      },
      "defaultValue": "Standard_LRS"
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network to create"
      },
      "defaultValue": null
    },
    "vnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNet in CIDR format"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "subnet1Name": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet created in the new VNet"
      },
      "defaultValue": "ExtraNet"
    },
    "subnet1AddressSpace": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet created in the new VNet"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The local administrator username on the VMs created"
      },
      "defaultValue": "AzureAdmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The local administrator password on the VMs created"
      },
      "defaultValue": null
    },
    "domainControllerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the VM hosting AD DS"
      },
      "defaultValue": "DC01"
    },
    "domainControllerSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D3_v2",
        "Standard_DS3_v2",
        "Standard_D4_v2",
        "Standard_DS4_v2",
        "Standard_D11_v2",
        "Standard_DS11_v2",
        "Standard_D12_v2",
        "Standard_DS12_v2",
        "Standard_D13_v2",
        "Standard_DS13_v2"
      ],
      "metadata": {
        "description": "The size of the VM hosting AD DS"
      },
      "defaultValue": "Standard_D1_v2"
    },
    "domainControllerIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the VM hosting AD DS"
      },
      "defaultValue": "10.0.0.4"
    },
    "adDSdomainName": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD DS domain to be created"
      },
      "defaultValue": "contoso.com"
    },
    "remoteDesktopName": {
      "type": "string",
      "metadata": {
        "description": "The name of the remote desktop VM"
      },
      "defaultValue": "RD01"
    },
    "remoteDesktopSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D1_v2",
        "Standard_DS1_v2",
        "Standard_D2_v2",
        "Standard_DS2_v2",
        "Standard_D3_v2",
        "Standard_DS3_v2",
        "Standard_D4_v2",
        "Standard_DS4_v2",
        "Standard_D11_v2",
        "Standard_DS11_v2",
        "Standard_D12_v2",
        "Standard_DS12_v2",
        "Standard_D13_v2",
        "Standard_DS13_v2"
      ],
      "metadata": {
        "description": "The size of the remote desktop VM"
      },
      "defaultValue": "Standard_D1_v2"
    }
  },

  "variables": {
    "deploymentName": "[deployment().Name]",
    "templateLocationURI": "[concat(parameters('assetLocationURI'),'Templates/')]",
    "dscLocationURI": "[concat(parameters('assetLocationURI'),'DSC/')]",
    "vmVHdContainerName": "vhds",
    "domainJoinOptions": "3",
    "StorageAccount-DeploymentName": "[concat(variables('deploymentName'),'-StorageAccount')]",
    "Network-AzureDNS-DeploymentName": "[concat(variables('deploymentName'),'-Nework-AzureDNS')]",
    "DomainController-DeploymentName": "[concat(variables('deploymentName'), '-DomainController')]",
    "Network-CustomDNS-DeploymentName": "[concat(variables('deploymentName'), '-Network-CustomDNS')]",
    "RemoteDesktop-DeploymentName": "[concat(variables('deploymentName'),'-RemoteDesktop')]",
    "RemoteDesktop-DomainJoin-DeploymentName": "[concat(variables('deploymentName'),'-RemoteDesktop-DomainJoin')]"
  },

  "resources": [
    {
      "name": "[variables('StorageAccount-DeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateLocationURI'), 'StorageAccount.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": { "value": "[parameters('storageAccountName')]" },
          "storageAccountType": { "value": "[parameters('storageAccountType')]" }
        }
      }
    },
    {
      "name": "[variables('Network-AzureDNS-DeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateLocationURI'), 'VNet-1-subnet.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": { "value": "[parameters('vnetName')]" },
          "vnetAddressSpace": { "value": "[parameters('vnetAddressSpace')]" },
          "subnet1Name": { "value": "[parameters('subnet1Name')]" },
          "subnet1AddressSpace": { "value": "[parameters('subnet1AddressSpace')]" }
        }
      }
    },
    {
      "name": "[variables('DomainController-DeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('StorageAccount-DeploymentName')]",
        "[variables('Network-AzureDNS-DeploymentName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateLocationURI'), 'VM-DC.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[parameters('domainControllerName')]" },
          "vmSize": { "value": "[parameters('domainControllerSize')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "vmStorageAccountName": { "value": "[parameters('storageAccountName')]" },
          "vmStorageAccountContainerName": { "value": "[variables('vmVHdContainerName')]" },
          "vmNIcSubnetId": { "value": "[reference(variables('Network-AzureDNS-DeploymentName')).outputs.Subnet1.value]" },
          "dscLocation": { "value": "[variables('dscLocationURI')]" },
          "domainName": { "value": "[parameters('adDSdomainName')]" },
          "dcIpAddress": { "value": "[parameters('domainControllerIpAddress')]" }
        }
      }
    },
    {
      "name": "[variables('Network-CustomDNS-DeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('DomainController-DeploymentName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateLocationURI'), 'VNet-1-subnet-custom-DNS.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": { "value": "[parameters('vnetName')]" },
          "vnetAddressSpace": { "value": "[parameters('vnetAddressSpace')]" },
          "subnet1Name": { "value": "[parameters('subnet1Name')]" },
          "subnet1AddressSpace": { "value": "[parameters('subnet1AddressSpace')]" },
          "dnsServers": {
            "value": [
              "[parameters('domainControllerIpAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "[variables('RemoteDesktop-DeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('Network-CustomDNS-DeploymentName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateLocationURI'), 'VM-data-disk-publicIP.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[parameters('remoteDesktopName')]" },
          "vmSize": { "value": "[parameters('remoteDesktopSize')]" },
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "vmStorageAccountName": { "value": "[parameters('storageAccountName')]" },
          "vmStorageAccountContainerName": { "value": "[variables('vmVHdContainerName')]" },
          "vmNIcSubnetId": { "value": "[reference(variables('Network-CustomDNS-DeploymentName')).outputs.Subnet1.value]" }
        }
      }
    },
    {
      "name": "[variables('RemoteDesktop-DomainJoin-DeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('RemoteDesktop-DeploymentName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('templateLocationURI'), 'VM-domain-join.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[parameters('remoteDesktopName')]" },
          "domainToJoin": "[parameters('adDSdomainName')]",
          "domainJoinOptions": "[variables('domainJoinOptions')]",
          "domainUserName": "[parameters('adminUserName')]",
          "domainPassword": "[parameters('adminPassword')]"
        }
      }
    }
  ],

  "outputs": {}
}